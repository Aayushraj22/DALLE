import React, {useState, useEffect} from 'react'

import {FormField, Card, Loader} from '../components'

const RenderCards = ({data, title}) => {
  if(data?.length)
    return data.map((post) => <Card key={post._id} {...post} />)

  return (
    <h2 className='mt-5 font-bold text-[#6449ff] text-xl uppercase'>
      {title} 
    </h2>
  )
}

export default function Home() {

  const [searchTimeout, setSearchTimeout] = useState(null)
  const [searchedResults, setSearchedResults] = useState(null)
  const [loading, setLoading] = useState(false)
  const [allPosts, setAllPosts] = useState(null)
  const [searchText, setSearchText] = useState('')

  const fetchPosts = async () => {
    setLoading(true)

    try {
      const response = await fetch('http://localhost:8080/api/v1/post', {
        method: 'GET',
        headers: {
          'Content-Type' : 'application/json',
        },
      })

      if(response.ok) {
        const result = await response.json()
        // console.log('result data is : ',result)
        setAllPosts(result?.data?.reverse())  // new post always occurs at first
      }
    } catch (error) {
      alert(error)
    } finally {
      setLoading(false)
    }
  }

  useEffect(() => {
    fetchPosts()
  }, [])
  

  const handleSearchChange = (e) => {
    clearTimeout(searchTimeout)
    setSearchText(e.target.value)

    setSearchTimeout(
      setTimeout(()=>{
        const searchResults = allPosts.filter((item) => item.name.toLowerCase().includes(searchText.toLowerCase()) || item.prompt.toLowerCase().includes(searchText.toLowerCase()))

        setSearchedResults(searchResults)
      },500)
    )
  }
  
  return (
  <>
    <section className='max-w-[1280px] mx-auto '>
      <div className='text-center mb-4 '>
        <h1 className='font-extrabold text-[40px] lg:text-[50px] tracking-widest font-serif'>DALL-E</h1>
        <p className='lg:text-[30px] text-[16px] text-[#666e75] mt-2 mx-auto max-w-[700px] font-serif'><span className='text-[#6469ff]'>DALL-E</span> is an AI Model that generates realistic images and edit images from a description in natural language</p>
      </div>

      <div>
        <h1 className='font-extrabold text-[#222328] text-[32px] lg:text-[45px] font-serif'>
          The Community Showcase
        </h1>
        <p className='lg:text-[30px] text-[16px] text-[#666e75] mt-2 max-w-[500px] font-serif'>
          Browse through the collection of images generated by <span className='text-[#6469ff]'>DALL-E AI</span>
        </p>
      </div>

      <div className='mt-16'>
        <FormField 
          labelName = 'Search posts'
          type='text'
          name='text'
          value={searchText}
          placeholder='write Prompt'
          handleChange = {handleSearchChange}
        />
      </div>

      <div className='mt-5'> 
        {loading ? (
          <div className='flex justify-center items-center'>
            <Loader />
          </div>
        ) : ( 
          <>
            {searchText && (
              <h2 className='text-[#666e75] font-medium mb-3 text-xl '>
                showing results for search : <span className='font-bold text-[#222328]'>{searchText}</span>
              </h2>
            )}

            <div className='grid lg:grid-cols-4 sm:grid-cols-3 xs: grid-cols-2 grid-cols-1 gap-3'>
              {searchText ? (
                <RenderCards data={searchedResults} title='No search results found' />
              ) : (
                <RenderCards data={allPosts} title='No posts found' />
              )}
            </div>
          </>
        )}
      </div>
    </section>  
  </>
  )
}
